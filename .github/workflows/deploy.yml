name: Deploy with PM2

on:
  push:
    branches:
      - main
      - Khiem

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Add environment variables
        run: 
          echo "DATABASE_URL=${{ secrets.DB_URL }}" >> .env
          echo "ACCESS_SECRET=${{ secrets.ACCESS_SECRET }}" >> .env
          echo "REFRESH_SECRET=${{ secrets.REFRESH_SECRET }}" >> .env
          echo "WEATHERAPI_KEY=${{ secrets.WEATHERAPI_KEY }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          cat .env

      - name: Install dependencies
        run: npm install

      - name: Setup Prisma
        run: npx prisma generate

      - name: Build project
        run: NODE_OPTIONS="--max-old-space-size=4096" npm run build

      - name: Install PM2
        run: npm install -g pm2

      - name: Restart with PM2
        run: |
          if pm2 describe fava-be > /dev/null; then
          pm2 delete fava-be
          fi  
          pm2 start dist/main.js --name "fava-be" # Adjust the entry point to your project's start file
          pm2 save # Save the PM2 process list

      - name: Update Render environment variables
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: srv-d0d3c3buibrs73dse8f0
          DB_URL: ${{ secrets.DB_URL }}
          ACCESS_SECRET: ${{ secrets.ACCESS_SECRET }}
          REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
          WEATHERAPI_KEY: ${{ secrets.WEATHERAPI_KEY }}
          PORT: ${{ secrets.PORT }}
        run: |
          cat <<EOF > payload.json
          {
            "envVars": [
              { "key": "DB_URL", "value": "${DB_URL}" },
              { "key": "ACCESS_SECRET", "value": "${ACCESS_SECRET}" },
              { "key": "REFRESH_SECRET", "value": "${REFRESH_SECRET}" },
              { "key": "WEATHERAPI_KEY", "value": "${WEATHERAPI_KEY}" },
              { "key": "PORT", "value": "${PORT}" }
            ]
          }
          EOF

          echo @payload.json

          response=$(curl -s -w "%{http_code}" -o response.json -X PUT "https://api.render.com/v1/services/${SERVICE_ID}/env-vars" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d @payload.json)

          echo "HTTP Response Code: $response"
          cat response.json

      - name: Trigger Render Deployment
        if: github.ref == 'refs/heads/main' && success()
        run: curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"